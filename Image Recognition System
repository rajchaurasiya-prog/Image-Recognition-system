import os, numpy as np
from flask import Flask, request
from tensorflow.keras.applications import MobileNetV2
from tensorflow.keras.applications.mobilenet_v2 import preprocess_input, decode_predictions
from tensorflow.keras.preprocessing import image

app = Flask(__name__)
model = MobileNetV2(weights="imagenet")
UPLOAD_FOLDER = "static/uploads"; os.makedirs(UPLOAD_FOLDER, exist_ok=True)

HTML_PAGE = """
<!DOCTYPE html><html><head><title>Image Recognition</title></head><body style="text-align:center;font-family:sans-serif">
<h1>Image Recognition System</h1>
<form method="POST" enctype="multipart/form-data">
<input type="file" name="file" required><button type="submit">Upload & Predict</button></form>
{content}</body></html>
"""

@app.route("/", methods=["GET", "POST"])
def upload_predict():
    if request.method == "POST":
        file = request.files.get("file")
        if file:
            filepath = os.path.join(UPLOAD_FOLDER, file.filename)
            file.save(filepath)
            img = image.load_img(filepath, target_size=(224, 224))
            arr = preprocess_input(np.expand_dims(image.img_to_array(img), 0))
            label, conf = decode_predictions(model.predict(arr), top=1)[0][0][1:]
            return HTML_PAGE.format(content=f"<h2>Prediction: {label}</h2><h3>Confidence: {round(conf*100,2)}%</h3><img src='/{filepath}' width='300'>")
    return HTML_PAGE.format(content="")

if __name__ == "__main__":
    app.run(debug=True)
import os, numpy as np
from flask import Flask, request
from tensorflow.keras.applications import MobileNetV2
from tensorflow.keras.applications.mobilenet_v2 import preprocess_input, decode_predictions
from tensorflow.keras.preprocessing import image

app = Flask(__name__)
model = MobileNetV2(weights="imagenet")
UPLOAD_FOLDER = "static/uploads"; os.makedirs(UPLOAD_FOLDER, exist_ok=True)

HTML_PAGE = """
<!DOCTYPE html><html><head><title>Image Recognition</title></head><body style="text-align:center;font-family:sans-serif">
<h1>Image Recognition System</h1>
<form method="POST" enctype="multipart/form-data">
<input type="file" name="file" required><button type="submit">Upload & Predict</button></form>
{content}</body></html>
"""

@app.route("/", methods=["GET", "POST"])
def upload_predict():
    if request.method == "POST":
        file = request.files.get("file")
        if file:
            filepath = os.path.join(UPLOAD_FOLDER, file.filename)
            file.save(filepath)
            img = image.load_img(filepath, target_size=(224, 224))
            arr = preprocess_input(np.expand_dims(image.img_to_array(img), 0))
            label, conf = decode_predictions(model.predict(arr), top=1)[0][0][1:]
            return HTML_PAGE.format(content=f"<h2>Prediction: {label}</h2><h3>Confidence: {round(conf*100,2)}%</h3><img src='/{filepath}' width='300'>")
    return HTML_PAGE.format(content="")

if __name__ == "__main__":
    app.run(debug=True)
